# Задача-1:
# Дан список фруктов. Напишите программу, выводящую фрукты в виде нумерованного списка, выровненного по правой стороне
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.
 # Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
@@ -8,11 +11,15 @@
# 3.   киви
# 4.  арбуз
 # Подсказка: использует метод .format()
# Подсказка: воспользоваться методом .format()

fruits = ["яблоко", "банан", "киви", "арбуз", "ананас"]
num = 0
for i in fruits:
    num += 1
    print(num, '{:>8}'.format(i))



 # Задача-2:
# Даны два произвольные списка. Удалите из первого списка элементы, присутствующие во втором списке.
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.

list1 = ["1", "52", "12", "car", "189", "snow", "life", "88", "g8", "Trump", "Clinton", "Bush"]
list2 = ["52", "Clinton", "15", "10", "Bush", "elections", "71"]
a = set(list1)
b = set(list2)
set.difference_update(a, b)
list1 = [a]
print(list1)




 # Задача-3:
# Дан произвольный список из целых чисел. Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.


oldlist = ["1", "2", "2", "3", "5", "3", "4", "10", "12", "15"]
newlist = []
for i in oldlist:
    if int(i) % 2 == 0:
        newlist.append(int(i) / 4)
    else:
        newlist.append(int(i) * 2)
print(newlist)

            #Старый вариант

oldlist = ["1", "2", "2", "3", "5", "3", "4", "10", "12", "15"]
newlist = []
i = 0
while i < len(oldlist):
    if int(oldlist[i]) % 2 == 0:
        newlist.append(int(oldlist[i]) / 4)
    else:
        newlist.append(int(oldlist[i]) * 2)
    i += 1
print(newlist)


        #Normal

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список, элементами которого будут
# квадратные корни элементов исходного списка, но только если результаты извлечения корня не имеют десятичной части и
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]


import math

list = [4, 10, 8, 11, 2, 9, 17, -5, 8, 9, -25, 25, 4]
i = 0
while i < len(list):
    if list[i] < 0:
        list.pop(i)
    elif math.sqrt(i) % 1 != 0:
        list.pop(i)
    else:
        list[i] = math.sqrt(i)
    i += 1
print(list)



# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
list = []
elements = int(input("Введите необходимое количество чисел для массива: "))
i = 0
while i < elements:
    list.append(random.randint(-100, 100))
    i += 1
print(list)